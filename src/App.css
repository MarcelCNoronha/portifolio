/* src/App.css */

/*
  Base styles for all elements, ensuring consistent box model behavior.
  Tailwind's Preflight (reset) already includes this, but it's good practice
  to have it explicitly if you might not be using Preflight or for clarity.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}

/*
  The #root element is where your React app mounts.
  - max-width: limits the overall width of your app content.
  - margin: 0 auto; centers the #root horizontally.
  - text-align: center; is applied here, but often better controlled
    within specific components using Tailwind classes.

  CRITICAL CHANGE: Removed 'padding: 2rem;' from #root.
  This padding was likely causing horizontal overflow on smaller screens
  because it was adding 4rem (2rem left + 2rem right) to the effective width
  of the root element, pushing it beyond the viewport if the screen was too narrow.
  Now, you should apply padding directly to your content containers
  (e.g., using 'px-4' or 'p-8' in your JSX) where you want the spacing.
*/
#root {
  max-width: 1280px; /* Limits overall content width */
  margin: 0 auto; /* Centers the content */
  /* padding: 2rem; <-- REMOVIDO DAQUI */
  text-align: center; /* You might want to control this more granularly with Tailwind classes like 'text-center' on specific elements */
}

/*
  These styles are typically generated by Vite for its default setup,
  or you might have them from a previous template.
  Keep them if you are using the default Vite/React logos and starter code.
  If you remove the Vite/React logos or modify them significantly,
  these rules might become obsolete.
*/
.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop_shadow(0 0 2em #61dafbaa);
}

.carousel-container {
  touch-action: pan-y;
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

/*
  You might need to import Tailwind's base, components, and utilities
  if your build process doesn't handle it automatically in your main CSS file
  (e.g., index.css or main.css).
  Example (ensure your 'tailwind.css' is correctly set up for imports):
*/
/* @import 'tailwindcss/base'; */
/* @import 'tailwindcss/components'; */
/* @import 'tailwindcss/utilities'; */

/*
  IMPORTANT: If you have a global 'index.css' or 'main.css' where
  you import Tailwind, make sure these rules in App.css don't conflict
  or override Tailwind's utility classes unintentionally.
*/
